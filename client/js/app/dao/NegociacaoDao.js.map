{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","transaction","store","objectStore","request","add","onabort","console","log","e","onsuccess","target","result","pk","onerror","error","name","openCursor","listaNegociacoes","negociacaoAtual","dados","value","push","_data","_quantidade","_valor","primaryKey","continue","clear","delete"],"mappings":"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","file":"NegociacaoDao.js","sourcesContent":["\nimport {Negociacao} from '../models/Negociacao';\n\n/*\nPara lidar também com o o IndexedDB outros desenvolvedores tornaram públicas suas bibliotecas. \nPor exemplo, há o Dexie e o Db.js, este último utiliza promises assim como fizemos.\n*/\nexport class NegociacaoDao {\n\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adicionar(negociacao) {\n        return new Promise((resolve, reject) => {\n            let transaction = this._connection.transaction([this._store], 'readwrite');\n            let store = transaction.objectStore(this._store);\n            let request = store.add(negociacao);\n\n            // #### VAI CANCELAR A TRANSAÇÃO. O evento onerror será chamado.\n            // transaction.abort();// equivalente ao rollback do banco de dados relacional\n            //??? por que nao chama request.onabort ???\n            request.onabort = e => console.log(`Erro ao adicionar (transação abortada): ${e}`);\n\n            request.onsuccess = e => {\n                console.log('PK: ' + e.target.result);\n                negociacao.pk = e.target.result;\n                resolve();\n            };\n            request.onerror = e => reject(e.target.error.name);\n        });\n    }\n\n    listarTodos() {\n        return new Promise((resolve, reject) => {\n            let request = this._connection.transaction([this._store], 'readonly')\n                                          .objectStore(this._store)\n                                          .openCursor();\n            let listaNegociacoes = [];\n\n            request.onsuccess = e => {\n                let negociacaoAtual = e.target.result;\n                if (negociacaoAtual) {\n                    let dados = negociacaoAtual.value;\n                    listaNegociacoes.push(new Negociacao(dados._data, dados._quantidade, dados._valor, negociacaoAtual.primaryKey));\n                    negociacaoAtual.continue();\n                } else {\n                    resolve(listaNegociacoes);\n                }\n            }\n\n            request.onerror = e => reject(e.target.error.name);\n        });\n    }\n\n    apagarTodas() {\n        return new Promise((resolve, reject) => {\n            let request = this._connection.transaction([this._store], 'readwrite')\n                                          .objectStore(this._store)\n                                          .clear();\n                                    \n            request.onsuccess = e => resolve('Negociações apagadas com sucesso no Indexed-DB');\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject(e.target.error.name);\n            };\n        });\n    }\n\n    remover(negociacao) {\n        return new Promise((resolve, reject) => {\n            let request = this._connection.transaction([this._store], 'readwrite')\n                                          .objectStore(this._store)\n                                          .delete(negociacao.pk);\n            request.onsuccess = e => resolve('Negociação removida com sucesso do Indexed-DB');\n            request.onerror = e => {\n                    console.error(e);\n                    reject(e.target.error.name);\n                }\n        });\n    }\n\n}"]}